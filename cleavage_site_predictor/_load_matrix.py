from typing import Dict

class LoadMatrix:
    """
    Manages loading of substitution matrices like PAM and BLOSUM.
    """
    def __init__(self):
        self.PAMDict = self._get_pam_matrices()
        self.blosumDict = self._get_blosum_matrices()

    def _get_pam_matrices(self) -> Dict:
        """Returns a dictionary of PAM matrices."""
        return {
            'PAM300':{
                'A' : [2, -1, 0, 0, -2, 0, 0, 2, -1, 0, -2, -1, -1, -4, 1, 1, 1, -6, -4, 0, 0] ,
                'R' : [-1, 7, 0, -1, -4, 2, -1, -2, 2, -2, -3, 4, 0, -5, 0, 0, -1, 3, -5, -3, 0] ,
                'N' : [0, 0, 2, 2, -4, 1, 2, 1, 2, -2, -3, 1, -2, -4, 0, 1, 0, -5, -2, -2, 0] ,
                'D' : [0, -1, 2, 4, -6, 2, 4, 1, 1, -2, -4, 0, -3, -6, -1, 0, 0, -7, -5, -2, 0] ,
                'C' : [-2, -4, -4, -6, 15, -6, -6, -4, -4, -3, -7, -6, -6, -5, -3, 0, -2, -9, 1, -2, 0] ,
                'Q' : [0, 2, 1, 2, -6, 4, 3, -1, 3, -2, -2, 1, -1, -5, 0, 0, -1, -5, -4, -2, 0] ,
                'E' : [0, -1, 2, 4, -6, 3, 4, 0, 1, -2, -4, 0, -2, -6, 0, 0, 0, -8, -5, -2, 0] ,
                'G' : [2, -2, 1, 1, -4, -1, 0, 5, -2, -3, -4, -2, -3, -5, 0, 1, 0, -8, -6, -1, 0] ,
                'H' : [-1, 2, 2, 1, -4, 3, 1, -2, 7, -2, -2, 0, -2, -2, 0, -1, -1, -3, 0, -2, 0] ,
                'I' : [0, -2, -2, -2, -3, -2, -2, -3, -2, 5, 3, -2, 3, 1, -2, -1, 0, -6, -1, 4, 0] ,
                'L' : [-2, -3, -3, -4, -7, -2, -4, -4, -2, 3, 7, -3, 4, 3, -3, -3, -2, -2, 0, 2, 0] ,
                'K' : [-1, 4, 1, 0, -6, 1, 0, -2, 0, -2, -3, 5, 0, -6, -1, 0, 0, -4, -5, -2, 0] ,
                'M' : [-1, 0, -2, -3, -6, -1, -2, -3, -2, 3, 4, 0, 6, 1, -2, -2, -1, -5, -2, 2, 0] ,
                'F' : [-4, -5, -4, -6, -5, -5, -6, -5, -2, 1, 3, -6, 1, 11, -5, -4, -3, 1, 9, -1, 0] ,
                'P' : [1, 0, 0, -1, -3, 0, 0, 0, 0, -2, -3, -1, -2, -5, 6, 1, 1, -6, -5, -1, 0] ,
                'S' : [1, 0, 1, 0, 0, 0, 0, 1, -1, -1, -3, 0, -2, -4, 1, 1, 1, -3, -3, -1, 0] ,
                'T' : [1, -1, 0, 0, -2, -1, 0, 0, -1, 0, -2, 0, -1, -3, 1, 1, 2, -6, -3, 0, 0] ,
                'W' : [-6, 3, -5, -7, -9, -5, -8, -8, -3, -6, -2, -4, -5, 1, -6, -3, -6, 22, 0, -7, 0] ,
                'Y' : [-4, -5, -2, -5, 1, -4, -5, -6, 0, -1, 0, -5, -2, 9, -5, -3, -3, 0, 12, -3, 0] ,
                'V' : [0, -3, -2, -2, -2, -2, -2, -1, -2, 4, 2, -2, 2, -1, -1, -1, 0, -7, -3, 5, 0] ,
                '-' : [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] ,
            },
            'PAM120':{
                'A' : [3, -3, -1, 0, -3, -1, 0, 1, -3, -1, -3, -2, -2, -4, 1, 1, 1, -7, -4, 0, 0] ,
                'R' : [-3, 6, -1, -3, -4, 1, -3, -4, 1, -2, -4, 2, -1, -5, -1, -1, -2, 1, -5, -3, 0] ,
                'N' : [-1, -1, 4, 2, -5, 0, 1, 0, 2, -2, -4, 1, -3, -4, -2, 1, 0, -4, -2, -3, 0] ,
                'D' : [0, -3, 2, 5, -7, 1, 3, 0, 0, -3, -5, -1, -4, -7, -3, 0, -1, -8, -5, -3, 0] ,
                'C' : [-3, -4, -5, -7, 9, -7, -7, -4, -4, -3, -7, -7, -6, -6, -4, 0, -3, -8, -1, -3, 0] ,
                'Q' : [-1, 1, 0, 1, -7, 6, 2, -3, 3, -3, -2, 0, -1, -6, 0, -2, -2, -6, -5, -3, 0] ,
                'E' : [0, -3, 1, 3, -7, 2, 5, -1, -1, -3, -4, -1, -3, -7, -2, -1, -2, -8, -5, -3, 0] ,
                'G' : [1, -4, 0, 0, -4, -3, -1, 5, -4, -4, -5, -3, -4, -5, -2, 1, -1, -8, -6, -2, 0] ,
                'H' : [-3, 1, 2, 0, -4, 3, -1, -4, 7, -4, -3, -2, -4, -3, -1, -2, -3, -3, -1, -3, 0] ,
                'I' : [-1, -2, -2, -3, -3, -3, -3, -4, -4, 6, 1, -3, 1, 0, -3, -2, 0, -6, -2, 3, 0] ,
                'L' : [-3, -4, -4, -5, -7, -2, -4, -5, -3, 1, 5, -4, 3, 0, -3, -4, -3, -3, -2, 1, 0] ,
                'K' : [-2, 2, 1, -1, -7, 0, -1, -3, -2, -3, -4, 5, 0, -7, -2, -1, -1, -5, -5, -4, 0] ,
                'M' : [-2, -1, -3, -4, -6, -1, -3, -4, -4, 1, 3, 0, 8, -1, -3, -2, -1, -6, -4, 1, 0] ,
                'F' : [-4, -5, -4, -7, -6, -6, -7, -5, -3, 0, 0, -7, -1, 8, -5, -3, -4, -1, 4, -3, 0] ,
                'P' : [1, -1, -2, -3, -4, 0, -2, -2, -1, -3, -3, -2, -3, -5, 6, 1, -1, -7, -6, -2, 0] ,
                'S' : [1, -1, 1, 0, 0, -2, -1, 1, -2, -2, -4, -1, -2, -3, 1, 3, 2, -2, -3, -2, 0] ,
                'T' : [1, -2, 0, -1, -3, -2, -2, -1, -3, 0, -3, -1, -1, -4, -1, 2, 4, -6, -3, 0, 0] ,
                'W' : [-7, 1, -4, -8, -8, -6, -8, -8, -3, -6, -3, -5, -6, -1, -7, -2, -6, 12, -2, -8, 0] ,
                'Y' : [-4, -5, -2, -5, -1, -5, -5, -6, -1, -2, -2, -5, -4, 4, -6, -3, -3, -2, 8, -3, 0] ,
                'V' : [0, -3, -3, -3, -3, -3, -3, -2, -3, 3, 1, -4, 1, -3, -2, -2, 0, -8, -3, 5, 0] ,
                '-' : [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] ,
            },
            'PAM400':{
            'A' : [1, -1, 0, 1, -2, 0, 1, 1, -1, 0, -2, -1, -1, -3, 1, 1, 1, -6, -3, 0, 0] ,
            'R' : [-1, 5, 1, 0, -4, 1, 0, -2, 2, -2, -3, 4, 0, -4, 0, 0, 0, 3, -4, -2, 0] ,
            'N' : [0, 1, 1, 2, -3, 1, 2, 1, 1, -1, -3, 1, -1, -3, 0, 1, 0, -4, -3, -1, 0] ,
            'D' : [1, 0, 2, 3, -5, 2, 3, 1, 1, -2, -3, 1, -2, -5, 0, 1, 0, -7, -4, -2, 0] ,
            'C' : [-2, -4, -3, -5, 17, -5, -5, -3, -3, -2, -6, -5, -5, -4, -2, 0, -2, -8, 1, -2, 0] ,
            'Q' : [0, 1, 1, 2, -5, 3, 2, 0, 3, -2, -2, 1, -1, -4, 0, 0, 0, -5, -4, -1, 0] ,
            'E' : [1, 0, 2, 3, -5, 2, 3, 1, 1, -2, -3, 1, -2, -5, 0, 0, 0, -7, -4, -1, 0] ,
            'G' : [1, -2, 1, 1, -3, 0, 1, 4, -1, -2, -3, -1, -2, -5, 0, 1, 1, -7, -5, -1, 0] ,
            'H' : [-1, 2, 1, 1, -3, 3, 1, -1, 5, -2, -2, 1, -1, -2, 0, 0, -1, -2, 0, -2, 0] ,
            'I' : [0, -2, -1, -2, -2, -2, -2, -2, -2, 4, 3, -2, 2, 2, -1, -1, 0, -5, 0, 3, 0] ,
            'L' : [-2, -3, -3, -3, -6, -2, -3, -3, -2, 3, 7, -2, 4, 3, -2, -2, -1, -2, 0, 3, 0] ,
            'K' : [-1, 4, 1, 1, -5, 1, 1, -1, 1, -2, -2, 4, 0, -5, 0, 0, 0, -3, -4, -2, 0] ,
            'M' : [-1, 0, -1, -2, -5, -1, -2, -2, -1, 2, 4, 0, 5, 1, -1, -1, 0, -4, -1, 2, 0] ,
            'F' : [-3, -4, -3, -5, -4, -4, -5, -5, -2, 2, 3, -5, 1, 11, -4, -3, -3, 2, 10, 0, 0] ,
            'P' : [1, 0, 0, 0, -2, 0, 0, 0, 0, -1, -2, 0, -1, -4, 5, 1, 1, -6, -5, -1, 0] ,
            'S' : [1, 0, 1, 1, 0, 0, 0, 1, 0, -1, -2, 0, -1, -3, 1, 1, 1, -3, -3, -1, 0] ,
            'T' : [1, 0, 0, 0, -2, 0, 0, 1, -1, 0, -1, 0, 0, -3, 1, 1, 1, -5, -3, 0, 0] ,
            'W' : [-6, 3, -4, -7, -8, -5, -7, -7, -2, -5, -2, -3, -4, 2, -6, -3, -5, 26, 1, -6, 0] ,
            'Y' : [-3, -4, -3, -4, 1, -4, -4, -5, 0, 0, 0, -4, -1, 10, -5, -3, -3, 1, 13, -2, 0] ,
            'V' : [0, -2, -1, -2, -2, -1, -1, -1, -2, 3, 3, -2, 2, 0, -1, -1, 0, -6, -2, 4, 0] ,
            '-' : [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] ,
                },
            'PAM500':{
            'A' : [1, -1, 0, 1, -2, 0, 1, 1, 0, 0, -1, 0, -1, -3, 1, 1, 1, -6, -3, 0, 0] ,
            'R' : [-1, 5, 1, 0, -4, 2, 0, -1, 2, -2, -2, 4, 0, -4, 0, 0, 0, 4, -4, -2, 0] ,
            'N' : [0, 1, 1, 2, -3, 1, 1, 1, 1, -1, -2, 1, -1, -4, 0, 1, 0, -5, -3, -1, 0] ,
            'D' : [1, 0, 2, 3, -5, 2, 3, 1, 1, -2, -3, 1, -2, -5, 0, 1, 0, -7, -5, -1, 0] ,
            'C' : [-2, -4, -3, -5, 22, -5, -5, -3, -4, -2, -6, -5, -5, -3, -2, 0, -2, -9, 2, -2, 0] ,
            'Q' : [0, 2, 1, 2, -5, 2, 2, 0, 2, -1, -2, 1, -1, -4, 1, 0, 0, -5, -4, -1, 0] ,
            'E' : [1, 0, 1, 3, -5, 2, 3, 1, 1, -2, -3, 1, -1, -5, 0, 1, 0, -7, -5, -1, 0] ,
            'G' : [1, -1, 1, 1, -3, 0, 1, 4, -1, -2, -3, 0, -2, -5, 1, 1, 1, -8, -5, -1, 0] ,
            'H' : [0, 2, 1, 1, -4, 2, 1, -1, 4, -2, -2, 1, -1, -2, 0, 0, 0, -2, 0, -2, 0] ,
            'I' : [0, -2, -1, -2, -2, -1, -2, -2, -2, 3, 4, -2, 3, 2, -1, -1, 0, -5, 0, 3, 0] ,
            'L' : [-1, -2, -2, -3, -6, -2, -3, -3, -2, 4, 7, -2, 4, 4, -2, -2, -1, -1, 1, 3, 0] ,
            'K' : [0, 4, 1, 1, -5, 1, 1, 0, 1, -2, -2, 4, 0, -5, 0, 0, 0, -3, -5, -2, 0] ,
            'M' : [-1, 0, -1, -2, -5, -1, -1, -2, -1, 3, 4, 0, 4, 1, -1, -1, 0, -4, -1, 2, 0] ,
            'F' : [-3, -4, -4, -5, -3, -4, -5, -5, -2, 2, 4, -5, 1, 13, -4, -3, -3, 3, 13, 0, 0] ,
            'P' : [1, 0, 0, 0, -2, 1, 0, 1, 0, -1, -2, 0, -1, -4, 4, 1, 1, -6, -5, -1, 0] ,
            'S' : [1, 0, 1, 1, 0, 0, 1, 1, 0, -1, -2, 0, -1, -3, 1, 1, 1, -3, -3, -1, 0] ,
            'T' : [1, 0, 0, 0, -2, 0, 0, 1, 0, 0, -1, 0, 0, -3, 1, 1, 1, -6, -3, 0, 0] ,
            'W' : [-6, 4, -5, -7, -9, -5, -7, -8, -2, -5, -1, -3, -4, 3, -6, -3, -6, 34, 2, -6, 0] ,
            'Y' : [-3, -4, -3, -5, 2, -4, -5, -5, 0, 0, 1, -5, -1, 13, -5, -3, -3, 2, 15, -1, 0] ,
            'V' : [0, -2, -1, -1, -2, -1, -1, -1, -2, 3, 3, -2, 2, 0, -1, -1, 0, -6, -1, 3, 0] ,
            '-' : [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] ,
            },
            'PAM30':{
                'A' : [6, -7, -4, -3, -6, -4, -2, -2, -7, -5, -6, -7, -5, -8, -2, 0, -1, -13, -8, -2, 0] ,
                'R' : [-7, 8, -6, -10, -8, -2, -9, -9, -2, -5, -8, 0, -4, -9, -4, -3, -6, -2, -10, -8, 0] ,
                'N' : [-4, -6, 8, 2, -11, -3, -2, -3, 0, -5, -7, -1, -9, -9, -6, 0, -2, -8, -4, -8, 0] ,
                'D' : [-3, -10, 2, 8, -14, -2, 2, -3, -4, -7, -12, -4, -11, -15, -8, -4, -5, -15, -11, -8, 0] ,
                'C' : [-6, -8, -11, -14, 10, -14, -14, -9, -7, -6, -15, -14, -13, -13, -8, -3, -8, -15, -4, -6, 0] ,
                'Q' : [-4, -2, -3, -2, -14, 8, 1, -7, 1, -8, -5, -3, -4, -13, -3, -5, -5, -13, -12, -7, 0] ,
                'E' : [-2, -9, -2, 2, -14, 1, 8, -4, -5, -5, -9, -4, -7, -14, -5, -4, -6, -17, -8, -6, 0] ,
                'G' : [-2, -9, -3, -3, -9, -7, -4, 6, -9, -11, -10, -7, -8, -9, -6, -2, -6, -15, -14, -5, 0] ,
                'H' : [-7, -2, 0, -4, -7, 1, -5, -9, 9, -9, -6, -6, -10, -6, -4, -6, -7, -7, -3, -6, 0] ,
                'I' : [-5, -5, -5, -7, -6, -8, -5, -11, -9, 8, -1, -6, -1, -2, -8, -7, -2, -14, -6, 2, 0] ,
                'L' : [-6, -8, -7, -12, -15, -5, -9, -10, -6, -1, 7, -8, 1, -3, -7, -8, -7, -6, -7, -2, 0] ,
                'K' : [-7, 0, -1, -4, -14, -3, -4, -7, -6, -6, -8, 7, -2, -14, -6, -4, -3, -12, -9, -9, 0] ,
                'M' : [-5, -4, -9, -11, -13, -4, -7, -8, -10, -1, 1, -2, 11, -4, -8, -5, -4, -13, -11, -1, 0] ,
                'F' : [-8, -9, -9, -15, -13, -13, -14, -9, -6, -2, -3, -14, -4, 9, -10, -6, -9, -4, 2, -8, 0] ,
                'P' : [-2, -4, -6, -8, -8, -3, -5, -6, -4, -8, -7, -6, -8, -10, 8, -2, -4, -14, -13, -6, 0] ,
                'S' : [0, -3, 0, -4, -3, -5, -4, -2, -6, -7, -8, -4, -5, -6, -2, 6, 0, -5, -7, -6, 0] ,
                'T' : [-1, -6, -2, -5, -8, -5, -6, -6, -7, -2, -7, -3, -4, -9, -4, 0, 7, -13, -6, -3, 0] ,
                'W' : [-13, -2, -8, -15, -15, -13, -17, -15, -7, -14, -6, -12, -13, -4, -14, -5, -13, 13, -5, -15, 0] ,
                'Y' : [-8, -10, -4, -11, -4, -12, -8, -14, -3, -6, -7, -9, -11, 2, -13, -7, -6, -5, 10, -7, 0] ,
                'V' : [-2, -8, -8, -8, -6, -7, -6, -5, -6, 2, -2, -9, -1, -8, -6, -6, -3, -15, -7, 7, 0] ,
                '-' : [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] ,
            }
        }

    def _get_blosum_matrices(self) -> Dict:
        """Returns a dictionary of BLOSUM matrices."""
        return {
            'blosum100':{
                'A': [8, -3, -4, -5, -2, -2, -3, -1, -4, -4, -4, -2, -3, -5, -2, 1, -1, -6, -5, -2, 0],
                'R': [-3, 10, -2, -5, -8, 0, -2, -6, -1, -7, -6, 3, -4, -6, -5, -3, -3, -7, -5, -6, 0],
                'N': [-4, -2, 11, 1, -5, -1, -2, -2, 0, -7, -7, -1, -5, -7, -5, 0, -1, -8, -5, -7, 0],
                'D': [-5, -5, 1, 10, -8, -2, 2, -4, -3, -8, -8, -3, -8, -8, -5, -2, -4, -10, -7, -8, 0],
                'C': [-2, -8, -5, -8, 14, -7, -9, -7, -8, -3, -5, -8, -4, -4, -8, -3, -3, -7, -6, -3, 0],
                'Q': [-2, 0, -1, -2, -7, 11, 2, -5, 1, -6, -5, 2, -2, -6, -4, -2, -3, -5, -4, -5, 0],
                'E': [-3, -2, -2, 2, -9, 2, 10, -6, -2, -7, -7, 0, -5, -8, -4, -2, -3, -8, -7, -5, 0],
                'G': [-1, -6, -2, -4, -7, -5, -6, 9, -6, -9, -8, -5, -7, -8, -6, -2, -5, -7, -8, -8, 0],
                'H': [-4, -1, 0, -3, -8, 1, -2, -6, 13, -7, -6, -3, -5, -4, -5, -3, -4, -5, 1, -7, 0],
                'I': [-4, -7, -7, -8, -3, -6, -7, -9, -7, 8, 2, -6, 1, -2, -7, -5, -3, -6, -4, 4, 0],
                'L': [-4, -6, -7, -8, -5, -5, -7, -8, -6, 2, 8, -6, 3, 0, -7, -6, -4, -5, -4, 0, 0],
                'K': [-2, 3, -1, -3, -8, 2, 0, -5, -3, -6, -6, 10, -4, -6, -3, -2, -3, -8, -5, -5, 0],
                'M': [-3, -4, -5, -8, -4, -2, -5, -7, -5, 1, 3, -4, 12, -1, -5, -4, -2, -4, -5, 0, 0],
                'F': [-5, -6, -7, -8, -4, -6, -8, -8, -4, -2, 0, -6, -1, 11, -7, -5, -5, 0, 4, -3, 0],
                'P': [-2, -5, -5, -5, -8, -4, -4, -6, -5, -7, -7, -3, -5, -7, 12, -3, -4, -8, -7, -6, 0],
                'S': [1, -3, 0, -2, -3, -2, -2, -2, -3, -5, -6, -2, -4, -5, -3, 9, 2, -7, -5, -4, 0],
                'T': [-1, -3, -1, -4, -3, -3, -3, -5, -4, -3, -4, -3, -2, -5, -4, 2, 9, -7, -5, -1, 0],
                'W': [-6, -7, -8, -10, -7, -5, -8, -7, -5, -6, -5, -8, -4, 0, -8, -7, -7, 17, 2, -5, 0],
                'Y': [-5, -5, -5, -7, -6, -4, -7, -8, 1, -4, -4, -5, -5, 4, -7, -5, -5, 2, 12, -5, 0],
                'V': [-2, -6, -7, -8, -3, -5, -5, -8, -7, 4, 0, -5, 0, -3, -6, -4, -1, -5, -5, 8, 0],
                '-': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
            },
            'blosum62':{
                'A': [4, -1, -2, -2, 0, -1, -1, 0, -2, -1, -1, -1, -1, -2, -1, 1, 0, -3, -2, 0, 0],
                'R': [-1, 5, 0, -2, -3, 1, 0, -2, 0, -3, -2, 2, -1, -3, -2, -1, -1, -3, -2, -3, 0],
                'N': [-2, 0, 6, 1, -3, 0, 0, 0, 1, -3, -3, 0, -2, -3, -2, 1, 0, -4, -2, -3, 0],
                'D': [-2, -2, 1, 6, -3, 0, 2, -1, -1, -3, -4, -1, -3, -3, -1, 0, -1, -4, -3, -3, 0],
                'C': [0, -3, -3, -3, 9, -3, -4, -3, -3, -1, -1, -3, -1, -2, -3, -1, -1, -2, -2, -1, 0],
                'Q': [-1, 1, 0, 0, -3, 5, 2, -2, 0, -3, -2, 1, 0, -3, -1, 0, -1, -2, -1, -2, 0],
                'E': [-1, 0, 0, 2, -4, 2, 5, -2, 0, -3, -3, 1, -2, -3, -1, 0, -1, -3, -2, -2, 0],
                'G': [0, -2, 0, -1, -3, -2, -2, 6, -2, -4, -4, -2, -3, -3, -2, 0, -2, -2, -3, -3, 0],
                'H': [-2, 0, 1, -1, -3, 0, 0, -2, 8, -3, -3, -1, -2, -1, -2, -1, -2, -2, 2, -3, 0],
                'I': [-1, -3, -3, -3, -1, -3, -3, -4, -3, 4, 2, -3, 1, 0, -3, -2, -1, -3, -1, 3, 0],
                'L': [-1, -2, -3, -4, -1, -2, -3, -4, -3, 2, 4, -2, 2, 0, -3, -2, -1, -2, -1, 1, 0],
                'K': [-1, 2, 0, -1, -3, 1, 1, -2, -1, -3, -2, 5, -1, -3, -1, 0, -1, -3, -2, -2, 0],
                'M': [-1, -1, -2, -3, -1, 0, -2, -3, -2, 1, 2, -1, 5, 0, -2, -1, -1, -1, -1, 1, 0],
                'F': [-2, -3, -3, -3, -2, -3, -3, -3, -1, 0, 0, -3, 0, 6, -4, -2, -2, 1, 3, -1, 0],
                'P': [-1, -2, -2, -1, -3, -1, -1, -2, -2, -3, -3, -1, -2, -4, 7, -1, -1, -4, -3, -2, 0],
                'S': [1, -1, 1, 0, -1, 0, 0, 0, -1, -2, -2, 0, -1, -2, -1, 4, 1, -3, -2, -2, 0],
                'T': [0, -1, 0, -1, -1, -1, -1, -2, -2, -1, -1, -1, -1, -2, -1, 1, 5, -2, -2, 0, 0],
                'W': [-3, -3, -4, -4, -2, -2, -3, -2, -2, -3, -2, -3, -1, 1, -4, -3, -2, 11, 2, -3, 0],
                'Y': [-2, -2, -2, -3, -2, -1, -2, -3, 2, -1, -1, -2, -1, 3, -3, -2, -2, 2, 7, -1, 0],
                'V': [0, -3, -3, -3, -1, -2, -2, -3, -3, 3, 1, -2, 1, -1, -2, -2, 0, -3, -1, 4, 0],
                '-': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
            },
            'blosum45':{
                'A': [5, -2, -1, -2, -1, -1, -1,  0, -2, -1, -1, -1, -1, -2, -1,  1,  0, -2, -2,  0, 0],
                'R': [-2,  7,  0, -1, -3,  1,  0, -2,  0, -3, -2,  3, -1, -2, -2, -1, -1, -2, -1, -2, 0],
                'N': [-1,  0,  6,  2, -2,  0,  0,  0,  1, -2, -3,  0, -2, -2, -2,  1,  0, -4, -2, -3, 0],
                'D': [-2, -1,  2,  7, -3,  0,  2, -1,  0, -4, -3,  0, -3, -4, -1,  0, -1, -4, -2, -3, 0],
                'C': [-1, -3, -2, -3, 12, -3, -3, -3, -3, -3, -2, -3, -2, -2, -4, -1, -1, -5, -3, -1, 0],
                'Q': [-1,  1,  0,  0, -3,  6,  2, -2,  1, -2, -2,  1,  0, -4, -1,  0, -1, -2, -1, -3, 0],
                'E': [-1,  0,  0,  2, -3,  2,  6, -2,  0, -3, -2,  1, -2, -3,  0,  0, -1, -3, -2, -3, 0],
                'G': [0, -2,  0, -1, -3, -2, -2,  7, -2, -4, -3, -2, -2, -3, -2,  0, -2, -2, -3, -3, 0],
                'H': [-2,  0,  1,  0, -3,  1,  0, -2, 10, -3, -2, -1,  0, -2, -2, -1, -2, -3,  2, -3, 0],
                'I': [-1, -3, -2, -4, -3, -2, -3, -4, -3,  5,  2, -3,  2,  0, -2, -2, -1, -2,  0,  3, 0],
                'L': [-1, -2, -3, -3, -2, -2, -2, -3, -2,  2,  5, -3,  2,  1, -3, -3, -1, -2,  0,  1, 0],
                'K': [-1,  3,  0,  0, -3,  1,  1, -2, -1, -3, -3,  5, -1, -3, -1, -1, -1, -2, -1, -2, 0],
                'M': [-1, -1, -2, -3, -2,  0, -2, -2,  0,  2,  2, -1,  6,  0, -2, -2, -1, -2,  0,  1, 0],
                'F': [-2, -2, -2, -4, -2, -4, -3, -3, -2,  0,  1, -3,  0,  8, -3, -2, -1,  1,  3,  0, 0],
                'P': [-1, -2, -2, -1, -4, -1,  0, -2, -2, -2, -3, -1, -2, -3,  9, -1, -1, -3, -3, -3, 0],
                'S': [1, -1,  1,  0, -1,  0,  0,  0, -1, -2, -3, -1, -2, -2, -1,  4,  2, -4, -2, -1, 0],
                'T': [0, -1,  0, -1, -1, -1, -1, -2, -2, -1, -1, -1, -1, -2, -1,  2,  5, -3, -1,  0, 0],
                'W': [-2, -2, -4, -4, -5, -2, -3, -2, -3, -2, -2, -2, -2,  1, -3, -4, -3, 15,  3, -3, 0],
                'Y': [-2, -1, -2, -2, -3, -1, -2, -3,  2,  0,  0, -1,  0,  3, -3, -2, -1,  3,  8, -1, 0],
                'V': [0, -2, -3, -3, -1, -3, -3, -3, -3,  3,  1, -2,  1,  0, -3, -1,  0, -3, -1,  5, 0],
                '-': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
            },
            'blosum75':{
                'A' : [4, -2, -2, -2, -1, -1, -1, 0, -2, -2, -2, -1, -1, -3, -1, 1, 0, -3, -2, 0, 0] ,
                'R' : [-2, 6, -1, -2, -4, 1, 0, -3, 0, -3, -3, 2, -2, -3, -2, -1, -1, -3, -2, -3, 0] ,
                'N' : [-2, -1, 6, 1, -3, 0, -1, -1, 0, -4, -4, 0, -3, -4, -3, 0, 0, -4, -3, -3, 0] ,
                'D' : [-2, -2, 1, 6, -4, -1, 1, -2, -1, -4, -4, -1, -4, -4, -2, -1, -1, -5, -4, -4, 0] ,
                'C' : [-1, -4, -3, -4, 9, -3, -5, -3, -4, -1, -2, -4, -2, -2, -4, -1, -1, -3, -3, -1, 0] ,
                'Q' : [-1, 1, 0, -1, -3, 6, 2, -2, 1, -3, -3, 1, 0, -4, -2, 0, -1, -2, -2, -2, 0] ,
                'E' : [-1, 0, -1, 1, -5, 2, 5, -3, 0, -4, -4, 1, -2, -4, -1, 0, -1, -4, -3, -3, 0] ,
                'G' : [0, -3, -1, -2, -3, -2, -3, 6, -2, -5, -4, -2, -3, -4, -3, -1, -2, -3, -4, -4, 0] ,
                'H' : [-2, 0, 0, -1, -4, 1, 0, -2, 8, -4, -3, -1, -2, -2, -2, -1, -2, -2, 2, -4, 0] ,
                'I' : [-2, -3, -4, -4, -1, -3, -4, -5, -4, 4, 1, -3, 1, 0, -3, -3, -1, -3, -2, 3, 0] ,
                'L' : [-2, -3, -4, -4, -2, -3, -4, -4, -3, 1, 4, -3, 2, 0, -3, -3, -2, -2, -1, 1, 0] ,
                'K' : [-1, 2, 0, -1, -4, 1, 1, -2, -1, -3, -3, 5, -2, -4, -1, 0, -1, -4, -2, -3, 0] ,
                'M' : [-1, -2, -3, -4, -2, 0, -2, -3, -2, 1, 2, -2, 6, 0, -3, -2, -1, -2, -2, 1, 0] ,
                'F' : [-3, -3, -4, -4, -2, -4, -4, -4, -2, 0, 0, -4, 0, 6, -4, -3, -2, 1, 3, -1, 0] ,
                'P' : [-1, -2, -3, -2, -4, -2, -1, -3, -2, -3, -3, -1, -3, -4, 8, -1, -1, -5, -4, -3, 0] ,
                'S' : [1, -1, 0, -1, -1, 0, 0, -1, -1, -3, -3, 0, -2, -3, -1, 5, 1, -3, -2, -2, 0] ,
                'T' : [0, -1, 0, -1, -1, -1, -1, -2, -2, -1, -2, -1, -1, -2, -1, 1, 5, -3, -2, 0, 0] ,
                'W' : [-3, -3, -4, -5, -3, -2, -4, -3, -2, -3, -2, -4, -2, 1, -5, -3, -3, 11, 2, -3, 0] ,
                'Y' : [-2, -2, -3, -4, -3, -2, -3, -4, 2, -2, -1, -2, -2, 3, -4, -2, -2, 2, 7, -2, 0] ,
                'V' : [0, -3, -3, -4, -1, -2, -3, -4, -4, 3, 1, -3, 1, -1, -3, -2, 0, -3, -2, 4, 0] ,
                '-' : [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] ,
            },
            'blosum30':{
                'A' : [4, -1, 0, 0, -3, 1, 0, 0, -2, 0, -1, 0, 1, -2, -1, 1, 1, -5, -4, 1, 0] ,
                'R' : [-1, 8, -2, -1, -2, 3, -1, -2, -1, -3, -2, 1, 0, -1, -1, -1, -3, 0, 0, -1, 0] ,
                'N' : [0, -2, 8, 1, -1, -1, -1, 0, -1, 0, -2, 0, 0, -1, -3, 0, 1, -7, -4, -2, 0] ,
                'D' : [0, -1, 1, 9, -3, -1, 1, -1, -2, -4, -1, 0, -3, -5, -1, 0, -1, -4, -1, -2, 0] ,
                'C' : [-3, -2, -1, -3, 17, -2, 1, -4, -5, -2, 0, -3, -2, -3, -3, -2, -2, -2, -6, -2, 0] ,
                'Q' : [1, 3, -1, -1, -2, 8, 2, -2, 0, -2, -2, 0, -1, -3, 0, -1, 0, -1, -1, -3, 0] ,
                'E' : [0, -1, -1, 1, 1, 2, 6, -2, 0, -3, -1, 2, -1, -4, 1, 0, -2, -1, -2, -3, 0] ,
                'G' : [0, -2, 0, -1, -4, -2, -2, 8, -3, -1, -2, -1, -2, -3, -1, 0, -2, 1, -3, -3, 0] ,
                'H' : [-2, -1, -1, -2, -5, 0, 0, -3, 14, -2, -1, -2, 2, -3, 1, -1, -2, -5, 0, -3, 0] ,
                'I' : [0, -3, 0, -4, -2, -2, -3, -1, -2, 6, 2, -3, 1, 0, -3, -1, 0, -3, -1, 4, 0] ,
                'L' : [-1, -2, -2, -1, 0, -2, -1, -2, -1, 2, 4, -2, 2, 2, -3, -2, 0, -2, 3, 1, 0] ,
                'K' : [0, 1, 0, 0, -3, 0, 2, -1, -2, -2, -2, 4, 2, -1, 1, 0, -1, -2, -1, -2, 0] ,
                'M' : [1, 0, 0, -3, -2, -1, -1, -2, 2, 1, 2, 2, 6, 0, -4, -2, 0, -3, -1, 0, 0] ,
                'F' : [-2, -1, -1, -5, -3, -3, -4, -3, -3, 0, 2, -1, -2, 10, -4, -1, -2, 1, 3, 1, 0] ,
                'P' : [-1, -1, -3, -1, -3, 0, 1, -1, 1, -3, -3, 1, -4, -4, 11, -1, 0, -3, -2, -4, 0] ,
                'S' : [1, -1, 0, 0, -2, -1, 0, 0, -1, -1, -2, 0, -2, -1, -1, 4, 2, -3, -2, -1, 0] ,
                'T' : [1, -3, 1, -1, -2, 0, -2, -2, -2, 0, 0, -1, 0, -2, 0, 2, 5, -5, -1, 1, 0] ,
                'W' : [-5, 0, -7, -4, -2, -1, -1, 1, -5, -3, -2, -2, -3, 1, -3, -3, -5, 20, 5, -3, 0] ,
                'Y' : [-4, 0, -4, -1, -6, -1, -2, -3, 0, -1, 3, -1, -1, 3, -2, -2, -1, 5, 9, 1, 0] ,
                'V' : [1, -1, -2, -2, -2, -3, -3, -3, -3, 4, 1, -2, 1, -1, -4, -1, 1, -3, 1, 5, 0] ,
                '-': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] ,
            }
        }
    
    def _load_blosum100(self) -> Dict:
        """Load BLOSUM100 matrix"""
        return self.blosumDict['blosum100']
    
    def _load_blosum62(self) -> Dict:
        """Load BLOSUM62 matrix"""
        return self.blosumDict['blosum62']
    
    def _load_blosum75(self) -> Dict:
        """Load BLOSUM75 matrix"""
        return self.blosumDict['blosum75']
    
    def _load_blosum30(self) -> Dict:
        """Load BLOSUM30 matrix"""
        return self.blosumDict['blosum30']
    
    def _load_pam300(self) -> Dict:
        """Load PAM300 matrix"""
        return self.PAMDict['PAM300']
    
    def _load_pam120(self) -> Dict:
        """Load PAM120 matrix"""
        return self.PAMDict['PAM120']
    
    def _load_pam400(self) -> Dict:
        """Load PAM400 matrix"""
        return self.PAMDict['PAM400']
    
    def _load_pam500(self) -> Dict:
        """Load PAM500 matrix"""
        return self.PAMDict['PAM500']
    
    def _load_pam30(self) -> Dict:
        """Load PAM30 matrix"""
        return self.PAMDict['PAM30']